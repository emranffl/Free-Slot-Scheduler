/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package freeslotscheduler;

import java.awt.HeadlessException;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author emran
 */
public class FreeSlotScheduler extends javax.swing.JFrame {

    /**
     * Creates new form FreeSlotScheduler
     */
    public FreeSlotScheduler() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        fp = new javax.swing.JDialog();
        panel1 = new javax.swing.JPanel();
        panel2 = new javax.swing.JPanel();
        signuppanel = new javax.swing.JPanel();
        name = new javax.swing.JTextField();
        id = new javax.swing.JTextField();
        password = new javax.swing.JTextField();
        cgpa = new javax.swing.JTextField();
        dept = new javax.swing.JTextField();
        signup = new javax.swing.JButton();
        iahac = new javax.swing.JButton();
        csem = new javax.swing.JComboBox<>();
        signupasv = new javax.swing.JButton();
        email = new javax.swing.JTextField();
        loginpanel = new javax.swing.JPanel();
        lgnid = new javax.swing.JTextField();
        login = new javax.swing.JButton();
        back = new javax.swing.JButton();
        loginas = new javax.swing.JLabel();
        studentrb = new javax.swing.JRadioButton();
        facultyrb = new javax.swing.JRadioButton();
        volunteerrb = new javax.swing.JRadioButton();
        passmask = new javax.swing.JToggleButton();
        lgnpassword = new javax.swing.JPasswordField();
        forgotpassword = new javax.swing.JButton();
        vsignuppanel = new javax.swing.JPanel();
        vname = new javax.swing.JTextField();
        vid = new javax.swing.JTextField();
        vsignup = new javax.swing.JButton();
        vback = new javax.swing.JButton();
        selecttimelabel = new javax.swing.JLabel();
        fromtime = new com.github.lgooddatepicker.components.TimePicker();
        totime = new com.github.lgooddatepicker.components.TimePicker();
        vpassword = new javax.swing.JTextField();
        vemail = new javax.swing.JTextField();

        fp.getContentPane().setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        fp.getContentPane().add(panel1, "card2");

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        fp.getContentPane().add(panel2, "card3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Free Slot Scheduler");
        setResizable(false);
        setSize(new java.awt.Dimension(400, 650));
        getContentPane().setLayout(new java.awt.CardLayout());

        signuppanel.setBackground(new java.awt.Color(255, 255, 255));
        signuppanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Student Sign Up", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 16))); // NOI18N
        signuppanel.setFocusable(false);

        name.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Name", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Console", 0, 14))); // NOI18N
        name.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        id.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ID", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Console", 0, 14))); // NOI18N
        id.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        password.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Password", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Console", 0, 14))); // NOI18N
        password.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        cgpa.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CGPA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Console", 0, 14))); // NOI18N
        cgpa.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        dept.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Department", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Console", 0, 14))); // NOI18N
        dept.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        signup.setText("Sign Up");
        signup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signupActionPerformed(evt);
            }
        });

        iahac.setText("Have an account? Login");
        iahac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iahacActionPerformed(evt);
            }
        });

        csem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "                    Select Semester", "1st", "2nd", "3rd", "4th", "5th", "6th", "7th", "8th", "9th", "10th", "11th", "12th", "13th", "14th", "15th", "16th", "17th", "18th", "19th", "20th", "21st", "22nd", "23rd", "24th" }));
        csem.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N

        signupasv.setText("Sign Up as a Volunteer");
        signupasv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signupasvActionPerformed(evt);
            }
        });

        email.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Email", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Console", 0, 14))); // NOI18N
        email.setFont(new java.awt.Font("SansSerif", 0, 13)); // NOI18N

        javax.swing.GroupLayout signuppanelLayout = new javax.swing.GroupLayout(signuppanel);
        signuppanel.setLayout(signuppanelLayout);
        signuppanelLayout.setHorizontalGroup(
            signuppanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(signuppanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(signuppanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(signupasv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(name)
                    .addComponent(id)
                    .addComponent(password)
                    .addComponent(cgpa)
                    .addComponent(csem, 0, 280, Short.MAX_VALUE)
                    .addComponent(dept)
                    .addGroup(signuppanelLayout.createSequentialGroup()
                        .addComponent(signup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(iahac, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(email))
                .addContainerGap())
        );
        signuppanelLayout.setVerticalGroup(
            signuppanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(signuppanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cgpa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(csem, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(dept, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(signuppanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(signup)
                    .addComponent(iahac))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(signupasv)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(signuppanel, "card2");

        loginpanel.setBackground(new java.awt.Color(255, 255, 255));
        loginpanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Login", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 16))); // NOI18N
        loginpanel.setFocusable(false);

        lgnid.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ID", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Console", 0, 14))); // NOI18N
        lgnid.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N

        login.setText("Login");
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        loginas.setText("Login as");
        loginas.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        loginas.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        buttonGroup.add(studentrb);
        studentrb.setText("Student");
        studentrb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentrbActionPerformed(evt);
            }
        });

        buttonGroup.add(facultyrb);
        facultyrb.setText("Faculty");
        facultyrb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facultyrbActionPerformed(evt);
            }
        });

        buttonGroup.add(volunteerrb);
        volunteerrb.setText("Volunteer");
        volunteerrb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volunteerrbActionPerformed(evt);
            }
        });

        passmask.setIcon(new javax.swing.ImageIcon(getClass().getResource("/freeslotscheduler/Password Visibility.png"))); // NOI18N
        passmask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passmaskActionPerformed(evt);
            }
        });

        lgnpassword.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Password", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Console", 0, 14))); // NOI18N
        lgnpassword.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N

        forgotpassword.setText("Forgot password?");
        forgotpassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forgotpasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout loginpanelLayout = new javax.swing.GroupLayout(loginpanel);
        loginpanel.setLayout(loginpanelLayout);
        loginpanelLayout.setHorizontalGroup(
            loginpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loginpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginpanelLayout.createSequentialGroup()
                        .addComponent(lgnpassword)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(passmask, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(login, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(loginpanelLayout.createSequentialGroup()
                        .addComponent(back, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(forgotpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(loginpanelLayout.createSequentialGroup()
                        .addGroup(loginpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lgnid, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(loginpanelLayout.createSequentialGroup()
                                .addComponent(loginas)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(studentrb)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(facultyrb)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(volunteerrb)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        loginpanelLayout.setVerticalGroup(
            loginpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginpanelLayout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addComponent(lgnid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(loginpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lgnpassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passmask, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(loginpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginas)
                    .addComponent(studentrb)
                    .addComponent(facultyrb)
                    .addComponent(volunteerrb))
                .addGap(18, 18, 18)
                .addComponent(login)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(loginpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(forgotpassword)
                    .addComponent(back))
                .addContainerGap(153, Short.MAX_VALUE))
        );

        getContentPane().add(loginpanel, "card3");

        vsignuppanel.setBackground(new java.awt.Color(255, 255, 255));
        vsignuppanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Volunteer Sign Up", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 16))); // NOI18N
        vsignuppanel.setFocusable(false);

        vname.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Name", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Console", 0, 14))); // NOI18N
        vname.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        vid.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ID", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Console", 0, 14))); // NOI18N
        vid.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        vsignup.setText("Sign Up");
        vsignup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vsignupActionPerformed(evt);
            }
        });

        vback.setText("Back");
        vback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vbackActionPerformed(evt);
            }
        });

        selecttimelabel.setText("    Select Volunteering Time");
        selecttimelabel.setFont(new java.awt.Font("Lucida Console", 0, 15)); // NOI18N
        selecttimelabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        fromtime.setBackground(new java.awt.Color(255, 255, 255));
        fromtime.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "From", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Sans", 0, 14))); // NOI18N

        totime.setBackground(new java.awt.Color(255, 255, 255));
        totime.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "To", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Sans", 0, 14))); // NOI18N

        vpassword.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Password", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Console", 0, 14))); // NOI18N
        vpassword.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        vemail.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Email", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Console", 0, 14))); // NOI18N
        vemail.setFont(new java.awt.Font("SansSerif", 0, 13)); // NOI18N

        javax.swing.GroupLayout vsignuppanelLayout = new javax.swing.GroupLayout(vsignuppanel);
        vsignuppanel.setLayout(vsignuppanelLayout);
        vsignuppanelLayout.setHorizontalGroup(
            vsignuppanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vsignuppanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(vsignuppanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(vname)
                    .addComponent(vid)
                    .addComponent(vpassword)
                    .addComponent(selecttimelabel, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                    .addGroup(vsignuppanelLayout.createSequentialGroup()
                        .addGroup(vsignuppanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(vsignup, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fromtime, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(vsignuppanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(totime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(vback, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(vemail))
                .addContainerGap())
        );
        vsignuppanelLayout.setVerticalGroup(
            vsignuppanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vsignuppanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(vname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(vid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(vpassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(vemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(selecttimelabel)
                .addGap(18, 18, 18)
                .addGroup(vsignuppanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fromtime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(vsignuppanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vsignup)
                    .addComponent(vback))
                .addContainerGap(135, Short.MAX_VALUE))
        );

        getContentPane().add(vsignuppanel, "card4");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void signupActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_signupActionPerformed
        if (name.getText().isEmpty() || id.getText().isEmpty() || password.getText().isEmpty()
                || email.getText().isEmpty() || cgpa.getText().isEmpty() || dept.getText().isEmpty()
                || csem.getSelectedItem().toString().equals(csem.getItemAt(0))) {
            if (name.getText().isEmpty() || id.getText().isEmpty() || password.getText().isEmpty()
                    || email.getText().isEmpty() || cgpa.getText().isEmpty() || dept.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Fields canot be left empty! Enter required information.",
                        "Empty Credentials", 2);
            } else {
                JOptionPane.showMessageDialog(this, "Select semester", "Selection Error", 2);
            }
        } else {
            // Reaches when input fields are not empty
            DataManager datamanager = new DataManager();

            // Query to get last serial from database
            String slquery = "SELECT Serial FROM student ORDER BY Serial DESC LIMIT 1";
            int serial;

            try {
                // Getting data from database
                datamanager.getData(slquery);
                if (DataManager.rset.next()) {// Moving cursor to the next row
                    serial = DataManager.rset.getInt("Serial");
                } else {
                    // When the "student" table in database is empty 
                    serial = 0;
                }

                // Query to insert signup info into database
                String query = "INSERT INTO `student` VALUES('" + id.getText().trim() + "','" + name.getText().trim()
                        + "','" + Float.parseFloat(cgpa.getText().trim()) + "','" + csem.getSelectedItem().toString()
                        + "','" + dept.getText().trim().toUpperCase() + "','" + password.getText().trim() + "','"
                        + email.getText().trim() + "','" + ++serial + "')";

                if (datamanager.updateData(query)) {// Inserting data using "updateData(String)" which returns boolean upon data insertion
                    // Register the student's information to the database

                    clear(signup);
                    JOptionPane.showMessageDialog(this, "Signup successful!", "Success", 1);
                }
            } catch (SQLException | NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, ex, "Error", 2);
            } finally {
                // Closes the connection
                datamanager.close();
            }
        }
    }// GEN-LAST:event_signupActionPerformed

    private void iahacActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_iahacActionPerformed
        signuppanel.setVisible(false);
        loginpanel.setVisible(true);

        lgnid.setText(null);
        lgnpassword.setText(null);
        passmask.setSelected(false);
        buttonGroup.clearSelection();

        lgnid.requestFocus();
    }// GEN-LAST:event_iahacActionPerformed

    private void loginActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_loginActionPerformed
        if (lgnid.getText().isEmpty() || lgnpassword.getText().isEmpty()
                || (!studentrb.isSelected() && !facultyrb.isSelected() && !volunteerrb.isSelected())) {
            if (lgnid.getText().isEmpty() && lgnpassword.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "ID and password cannot be empty!", "Empty Credentials", 2);
            } else if (lgnid.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "ID cannot be empty! Enter ID.", "Empty Credential", 2);
            } else if (lgnpassword.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Password canntot be empty! Enter password.", "Empty Credential", 2);
            } else {
                // Reaches if login type is unselected
                if (!studentrb.isSelected() && !facultyrb.isSelected() && !volunteerrb.isSelected()) {
                    // Creates and displays custom OptionDialog if login type is not selected
                    String options[] = new String[3];
                    options[0] = "Student";
                    options[1] = "Faculty";
                    options[2] = "Volunteer";
                    // Custom button names

                    int choice = JOptionPane.showOptionDialog(this, "Select your designation!", "Unselected Designation", 0, -1, null, options, null);

                    switch (choice) {
                        case 0:
                            studentrb.doClick();
                            login.doClick();
                            break;
                        case 1:
                            facultyrb.doClick();
                            login.doClick();
                            break;
                        case 2:
                            volunteerrb.doClick();
                            login.doClick();
                            break;
                    }
                }
            }
        } else {
            // Reaches if all input fields are not empty
            DataManager datamanager = new DataManager();
            AttributeVerifier av = new AttributeVerifier();
            String text = lgnid.getText().trim(); // Trims the ID and stores it in "text"

            String queryID;
            String queryNameIDpass;

            if (faculty) {
                // Query for faculty
                queryID = "SELECT ID FROM `faculty` WHERE ID='" + text + "'";
                queryNameIDpass = "SELECT Name, ID, pass FROM `faculty` WHERE ID='" + text + "'";
            } else if (student) {
                // Query for student
                queryID = "SELECT ID FROM `student` WHERE ID='" + text + "'";
                queryNameIDpass = "SELECT Name, ID, pass FROM `student` WHERE ID='" + text + "'";
            } else {
                // Query for volunteer
                queryID = "SELECT ID FROM `volunteer` WHERE ID='" + text + "'";
                queryNameIDpass = "SELECT Name, ID, pass FROM `volunteer` WHERE ID='" + text + "'";
            }

            try {
                // Gets ID data from database and stores in ResultSet
                datamanager.getData(queryID);

                if (av.checkId(text)) {// Checks if the ID exists in ResultSet
                    // Gets Name, ID and password data from database and stores in ResultSet
                    datamanager.getData(queryNameIDpass);

                    if (av.checkLoginInfo()) {// Checks if the ID and corresponding password exists in ResultSet
                        loginname = DataManager.rset.getString("Name"); // Stores the name
                        // Closes the connection
                        datamanager.close();

                        // Opening the TableManager
                        new TableManager().setVisible(true);

                        // Disposing this window
                        this.dispose();
                    } else {
                        // Reaches if password is wrong
                        JOptionPane.showMessageDialog(this, "Wrong password!", "Invalid Credential", 2);
                        lgnpassword.setText(null);
                    }
                } else {
                    // Reaches if ID is wrong
                    JOptionPane.showMessageDialog(this, "Wrong credentials!", "Login Unsuccessful", 2);
                    lgnid.setText(null);
                    lgnpassword.setText(null);
                    buttonGroup.clearSelection();
                }
            } catch (HeadlessException | SQLException ex) {
                JOptionPane.showMessageDialog(this, ex, "Error", 2);
            }
        }
    }// GEN-LAST:event_loginActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_backActionPerformed
        clear(back);

        loginpanel.setVisible(false);
        signuppanel.setVisible(true);

        name.requestFocus();
    }// GEN-LAST:event_backActionPerformed

    private void signupasvActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_signupasvActionPerformed
        signuppanel.setVisible(false);
        vsignuppanel.setVisible(true);

        clear(signupasv); // Clears all the fields of volunteer sign up panel

        vname.requestFocus();
    }// GEN-LAST:event_signupasvActionPerformed

    private void vbackActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_vbackActionPerformed
        clear(vback); // Clears all the fields of student sign up panel

        vsignuppanel.setVisible(false);
        signuppanel.setVisible(true);

        name.requestFocus();
    }// GEN-LAST:event_vbackActionPerformed

    private void vsignupActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_vsignupActionPerformed
        if (vname.getText().isEmpty() || vid.getText().isEmpty() || vpassword.getText().isEmpty()
                || vemail.getText().isEmpty() || fromtime.getText().isEmpty() || totime.getText().isEmpty()) {
            if (vname.getText().isEmpty() || vid.getText().isEmpty() || vpassword.getText().isEmpty()
                    || vemail.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Fields canot be left empty! Enter required information.", "Empty Credentials", 2);
            } else if (fromtime.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Select volunteering start time!", "Selection Error", 2);
            } else {
                JOptionPane.showMessageDialog(this, "Select volunteering end time!", "Selection Error", 2);
            }
        } else if (fromtime.getTime().isAfter(totime.getTime())) {
            // If "To" time is after "From" time
            JOptionPane.showMessageDialog(this, "\"To\" time must be after \"From\" time!", "Selection Error", 2);
        } else {
            // Reaches when the input fields are not empty
            DataManager datamanager = new DataManager();
            AttributeVerifier av = new AttributeVerifier();
            // Query to check ID and Time Slot
            String slquery = "SELECT ID, `Time Slot` FROM `volunteer` WHERE ID=" + vid.getText().trim();

            try {
                // Gets data and stores in ResultSet
                datamanager.getData(slquery);
                if (av.checkId(vid.getText().trim())) {// Checks if ID exists
                    JOptionPane.showMessageDialog(this, "The ID: " + vid.getText() + " is already signed up for volunteering within: " + "!",
                            "Signup Error", 2);
                } else {
                    // Reaches if ID does not exist

                    // Data insertion query
                    String query = "INSERT INTO `volunteer` VALUES('" + vid.getText() + "','" + vname.getText() + "','"
                            + vpassword.getText() + "','" + vemail.getText() + "','" + fromtime.getText() + "-"
                            + totime.getText() + "')";

                    if (datamanager.updateData(query)) {
                        // Register the student's information to the database
                        clear(vsignup); // Clears the volunteer signup input fields
                        vname.requestFocus();

                        JOptionPane.showMessageDialog(this, "Volunteer signup successful!", "Success", 1);
                    }
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, ex, "Error", 2);
            } finally {
                // Closes the connection
                datamanager.close();
            }
        }
    }// GEN-LAST:event_vsignupActionPerformed

    private void studentrbActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_studentrbActionPerformed
        student = true;

        faculty = false;
        volunteer = false;
    }// GEN-LAST:event_studentrbActionPerformed

    private void facultyrbActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_facultyrbActionPerformed
        faculty = true;

        student = false;
        volunteer = false;
    }// GEN-LAST:event_facultyrbActionPerformed

    private void volunteerrbActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_volunteerrbActionPerformed
        volunteer = true;

        student = false;
        faculty = false;
    }// GEN-LAST:event_volunteerrbActionPerformed

    private void passmaskActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_passmaskActionPerformed
        if (passmask.isSelected()) {
            // Unmasks the characters
            lgnpassword.setEchoChar((char) 0);
        } else {
            // Masks the characters
            lgnpassword.setEchoChar('*');
        }
    }// GEN-LAST:event_passmaskActionPerformed

    private void forgotpasswordActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_forgotpasswordActionPerformed
        // Initializing and displaying the JFrame
        new ForgotPassword().setVisible(true);
    }// GEN-LAST:event_forgotpasswordActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException
                | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FreeSlotScheduler.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FreeSlotScheduler().setVisible(true); // Initializing and displaying the JFrame
        });
    }

    private void clear(javax.swing.JButton button) {
        if (button.equals(signup) || button.equals(back) || button.equals(vback)) {
            name.setText(null);
            id.setText(null);
            password.setText(null);
            email.setText(null);
            cgpa.setText(null);
            dept.setText(null);
            csem.setSelectedItem(csem.getItemAt(0));
        } else {
            vname.setText(null);
            vid.setText(null);
            vpassword.setText(null);
            vemail.setText(null);
            fromtime.setText("");
            totime.setText("");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JTextField cgpa;
    private javax.swing.JComboBox<String> csem;
    private javax.swing.JTextField dept;
    private javax.swing.JTextField email;
    private javax.swing.JRadioButton facultyrb;
    private javax.swing.JButton forgotpassword;
    private javax.swing.JDialog fp;
    private com.github.lgooddatepicker.components.TimePicker fromtime;
    private javax.swing.JButton iahac;
    private javax.swing.JTextField id;
    protected static javax.swing.JTextField lgnid;
    protected static javax.swing.JPasswordField lgnpassword;
    private javax.swing.JButton login;
    private javax.swing.JLabel loginas;
    private javax.swing.JPanel loginpanel;
    private javax.swing.JTextField name;
    private javax.swing.JPanel panel1;
    private javax.swing.JPanel panel2;
    private javax.swing.JToggleButton passmask;
    private javax.swing.JTextField password;
    private javax.swing.JLabel selecttimelabel;
    private javax.swing.JButton signup;
    private javax.swing.JButton signupasv;
    private javax.swing.JPanel signuppanel;
    private javax.swing.JRadioButton studentrb;
    private com.github.lgooddatepicker.components.TimePicker totime;
    private javax.swing.JButton vback;
    private javax.swing.JTextField vemail;
    private javax.swing.JTextField vid;
    private javax.swing.JTextField vname;
    private javax.swing.JRadioButton volunteerrb;
    private javax.swing.JTextField vpassword;
    private javax.swing.JButton vsignup;
    private javax.swing.JPanel vsignuppanel;
    // End of variables declaration//GEN-END:variables
    // Custom variables declaration - do not modify
    protected static boolean faculty = false;
    protected static boolean student = false;
    protected static boolean volunteer = false;
    protected static String loginname;
    // End of custom variables declaration
}
